# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'RtChrt.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sqlite3

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(600, 300)
        Form.setMaximumSize(QtCore.QSize(600, 300))
        self.frame = QtWidgets.QFrame(Form)
        self.frame.setGeometry(QtCore.QRect(0, 0, 600, 300))
        self.frame.setMaximumSize(QtCore.QSize(700, 400))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.frame.setFont(font)
        self.frame.setStyleSheet("background-color: #FFEECC")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.RtChrt_info = QtWidgets.QGroupBox(self.frame)
        self.RtChrt_info.setGeometry(QtCore.QRect(50, 80, 311, 101))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.RtChrt_info.setFont(font)
        self.RtChrt_info.setStyleSheet("QGroupBox{border:2px solid Black;};")
        self.RtChrt_info.setTitle("")
        self.RtChrt_info.setAlignment(QtCore.Qt.AlignCenter)
        self.RtChrt_info.setObjectName("RtChrt_info")
        self.Code = QtWidgets.QLabel(self.RtChrt_info)
        self.Code.setGeometry(QtCore.QRect(80, 30, 47, 13))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.Code.setFont(font)
        self.Code.setObjectName("Code")
        self.Name = QtWidgets.QLabel(self.RtChrt_info)
        self.Name.setGeometry(QtCore.QRect(190, 26, 47, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.Name.setFont(font)
        self.Name.setObjectName("Name")
        self.RtChrt = QtWidgets.QLabel(self.RtChrt_info)
        self.RtChrt.setGeometry(QtCore.QRect(10, 50, 47, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.RtChrt.setFont(font)
        self.RtChrt.setObjectName("RtChrt")
        self.LE_Code = QtWidgets.QLineEdit(self.RtChrt_info)
        self.LE_Code.setEnabled(False)
        self.LE_Code.setGeometry(QtCore.QRect(70, 50, 61, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.LE_Code.setFont(font)
        self.LE_Code.setStyleSheet("background-color:rgb(255, 255, 255)")
        self.LE_Code.setObjectName("LE_Code")
        self.LE_Name = QtWidgets.QLineEdit(self.RtChrt_info)
        self.LE_Name.setEnabled(False)
        self.LE_Name.setGeometry(QtCore.QRect(140, 50, 141, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.LE_Name.setFont(font)
        self.LE_Name.setStyleSheet("background-color:rgb(255, 255, 255)")
        self.LE_Name.setObjectName("LE_Name")
        self.btnSave = QtWidgets.QPushButton(self.frame)
        self.btnSave.setGeometry(QtCore.QRect(170, 220, 51, 24))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btnSave.setFont(font)
        self.btnSave.setStyleSheet("background-color: rgb(169, 255, 198);")
        self.btnSave.setObjectName("btnSave")
        self.Lable_List = QtWidgets.QLabel(self.frame)
        self.Lable_List.setGeometry(QtCore.QRect(410, 10, 161, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.Lable_List.setFont(font)
        self.Lable_List.setStyleSheet("QLabel { border: 1px solid Black;};")
        self.Lable_List.setAlignment(QtCore.Qt.AlignCenter)
        self.Lable_List.setObjectName("Lable_List")
        self.btnDelete = QtWidgets.QPushButton(self.frame)
        self.btnDelete.setGeometry(QtCore.QRect(240, 220, 61, 24))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btnDelete.setFont(font)
        self.btnDelete.setStyleSheet("background-color: rgb(169, 255, 198);")
        self.btnDelete.setObjectName("btnDelete")
        self.btnModify = QtWidgets.QPushButton(self.frame)
        self.btnModify.setGeometry(QtCore.QRect(90, 220, 61, 24))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btnModify.setFont(font)
        self.btnModify.setStyleSheet("background-color: rgb(169, 255, 198);")
        self.btnModify.setObjectName("btnModify")
        self.btnExit = QtWidgets.QPushButton(self.frame)
        self.btnExit.setGeometry(QtCore.QRect(320, 220, 51, 24))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btnExit.setFont(font)
        self.btnExit.setStyleSheet("background-color: rgb(169, 255, 198);")
        self.btnExit.setObjectName("btnExit")
        self.btnAdd = QtWidgets.QPushButton(self.frame)
        self.btnAdd.setGeometry(QtCore.QRect(10, 220, 59, 24))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btnAdd.setFont(font)
        self.btnAdd.setStyleSheet("background-color: rgb(169, 255, 198);")
        self.btnAdd.setObjectName("btnAdd")
        self.listWidget_name = QtWidgets.QListWidget(self.frame)
        self.listWidget_name.setGeometry(QtCore.QRect(410, 50, 161, 231))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.listWidget_name.setFont(font)
        self.listWidget_name.setStyleSheet("background-color:rgb(255, 255, 255)")
        self.listWidget_name.setObjectName("listWidget_name")
        self.label = QtWidgets.QLabel(self.frame)
        self.label.setGeometry(QtCore.QRect(70, 29, 281, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("color:rgb(85, 0, 0)")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.LE_Search = QtWidgets.QLineEdit(self.frame)
        self.LE_Search.setGeometry(QtCore.QRect(410, 30, 161, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.LE_Search.setFont(font)
        self.LE_Search.setStyleSheet("background-color: rgb(184, 212, 255);")
        self.LE_Search.setObjectName("LE_Search")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)
        self.View_data()

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "RtChrt"))
        self.Code.setText(_translate("Form", "Code"))
        self.Name.setText(_translate("Form", "Name"))
        self.RtChrt.setText(_translate("Form", "RtChrt"))
        self.LE_Code.setPlaceholderText(_translate("Form", "Code"))
        self.LE_Name.setPlaceholderText(_translate("Form", "Name"))
        self.btnSave.setText(_translate("Form", "Save"))
        self.Lable_List.setText(_translate("Form", "List"))
        self.btnDelete.setText(_translate("Form", "Delete"))
        self.btnModify.setText(_translate("Form", "Modify"))
        self.btnExit.setText(_translate("Form", "Exit"))
        self.btnAdd.setText(_translate("Form", "Add"))
        self.label.setText(_translate("Form", "RtChrt Info"))
        self.LE_Search.setPlaceholderText(_translate("Form", "Search"))

        self.listWidget_name.clicked.connect(self.selectionChanged)
        self.LE_Search.textChanged.connect(self.filterlist)
        self.btnDelete.clicked.connect(self.Delete_data)
        self.btnAdd.clicked.connect(self.add_data)
        self.btnSave.clicked.connect(self.save_data)
        self.btnModify.clicked.connect(self.Update_data)
        self.btnExit.clicked.connect(QtWidgets.qApp.quit)

    def selectionChanged(self):
        self.LE_Name.setEnabled(False)
        name = self.listWidget_name.currentItem()
        cname = (name.text())
        self.LE_Name.setText(name.text())
        conn = sqlite3.connect('D:\Internship\ERP_Info\ERP_Info.db')
        cur = conn.cursor()
        cur.execute("SELECT Code FROM RtChrtDB WHERE Name=?", (cname,))
        result = cur.fetchone()
        # print(result)
        # print(type(result))
        res = int(''.join(map(str, result)))
        self.LE_Code.setText(str(res))
        conn.commit()
        # print("Code Displayed successfully")
        conn.close()

    def filterlist(self):
        self.listWidget_name.clear()

    def add_data(self):
        self.LE_Name.setEnabled(True)
        self.LE_Name.setFocus()
        lastcode = self.listWidget_name.count()
        code = lastcode + 1
        print(code)
        self.LE_Code.setText(str(code))

    def save_data(self):
        LE_Code = self.LE_Code.text()
        LE_Name = self.LE_Name.text()
        if LE_Code == '' and LE_Name == '':
            # Create the dialog without running it yet
            msgBox = QMessageBox()

            # Set the various texts
            msgBox.setWindowTitle("Information")
            msgBox.setText(
                "No entry '" + str(LE_Code) + " " + str(LE_Name) + "'.Please enter Proper Name")
            msgBox.setStandardButtons(QMessageBox.Yes | QMessageBox.No)
            msgBox.setDefaultButton(QMessageBox.No)

            # Run the dialog, and check results
            bttn = msgBox.exec_()
            if bttn == QMessageBox.Yes:
                return True
            else:
                return False
        else:
            code = self.listWidget_name.count()
            if code == 0:
                code = 1
            else:
                code = code + 1
            self.LE_Code.setText(str(code))
            conn = sqlite3.connect('D:\Internship\ERP_Info\ERP_Info.db')
            cur = conn.cursor()
            cur.execute('INSERT INTO RtChrtDB (Code,Name) \
                                                              VALUES (?,?)', (code, LE_Name))

            conn.commit()
            print("Records Inserted successfully")
            conn.close()
            self.View_data()
            self.LE_Name.clear()
            self.LE_Name.setFocus()

    def View_data(self):
        conn = sqlite3.connect('D:\Internship\ERP_Info\ERP_Info.db')
        cur = conn.cursor()
        cur.execute('select Name from RtChrtDB')
        hu = cur.fetchall()
        self.listWidget_name.clear()
        for i in range(len(hu)):
            item = QtWidgets.QListWidgetItem(hu[i][0])
            self.listWidget_name.addItem(item)

        conn.commit()
        print("Records Displayed successfully")
        conn.close()

    def Update_data(self):
        self.LE_Name.setEnabled(True)
        LE_Code = self.LE_Code.text()
        LE_Name = self.LE_Name.text()
        conn = sqlite3.connect('D:\Internship\ERP_Info\ERP_Info.db')
        cur = conn.cursor()
        cur.execute("UPDATE RtChrtDB SET Name = ? WHERE Code = ?", (LE_Name, LE_Code))
        conn.commit()
        print("Records Modify successfully")
        conn.close()
        self.View_data()

    def Delete_data(self):
        LE_Code = self.LE_Code.text()
        conn = sqlite3.connect('D:\Internship\ERP_Info\ERP_Info.db')
        cur = conn.cursor()
        cur.execute("DELETE FROM RtChrtDB WHERE Code=?", (LE_Code))
        conn.commit()
        print("Records Deleted successfully")
        conn.close()
        self.LE_Code.clear()
        self.LE_Name.clear()
        self.View_data()


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    widget = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(widget)
    widget.show()
    sys.exit(app.exec_())