# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Vehicle.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sqlite3

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(600, 300)
        font = QtGui.QFont()
        font.setPointSize(10)
        Form.setFont(font)
        Form.setStyleSheet("background-color:rgb(245, 210, 255);\n"
"")
        self.groupBox = QtWidgets.QGroupBox(Form)
        self.groupBox.setGeometry(QtCore.QRect(10, 70, 391, 111))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.groupBox.setFont(font)
        self.groupBox.setStyleSheet("QGroupBox { border: 2px solid Black;};")
        self.groupBox.setTitle("")
        self.groupBox.setAlignment(QtCore.Qt.AlignCenter)
        self.groupBox.setObjectName("groupBox")
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setGeometry(QtCore.QRect(10, 70, 91, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.lineEdit_Name = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_Name.setEnabled(False)
        self.lineEdit_Name.setGeometry(QtCore.QRect(220, 70, 161, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lineEdit_Name.setFont(font)
        self.lineEdit_Name.setStyleSheet("background-color:rgb(255, 255, 255);")
        self.lineEdit_Name.setObjectName("lineEdit_Name")
        self.LE_TCode = QtWidgets.QLineEdit(self.groupBox)
        self.LE_TCode.setEnabled(False)
        self.LE_TCode.setGeometry(QtCore.QRect(140, 33, 71, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.LE_TCode.setFont(font)
        self.LE_TCode.setStyleSheet("background-color:rgb(255, 255, 255)")
        self.LE_TCode.setObjectName("LE_TCode")
        self.label_2 = QtWidgets.QLabel(self.groupBox)
        self.label_2.setGeometry(QtCore.QRect(10, 30, 131, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.LE_VCode = QtWidgets.QLineEdit(self.groupBox)
        self.LE_VCode.setEnabled(False)
        self.LE_VCode.setGeometry(QtCore.QRect(140, 70, 71, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.LE_VCode.setFont(font)
        self.LE_VCode.setStyleSheet("background-color:rgb(255, 255, 255)")
        self.LE_VCode.setObjectName("LE_VCode")
        self.CB_TName = QtWidgets.QComboBox(self.groupBox)
        self.CB_TName.setGeometry(QtCore.QRect(220, 30, 161, 22))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.CB_TName.setFont(font)
        self.CB_TName.setStyleSheet("background-color:rgb(255, 255, 255)")
        self.CB_TName.setObjectName("CB_TName")
        self.btnAdd = QtWidgets.QPushButton(Form)
        self.btnAdd.setGeometry(QtCore.QRect(10, 200, 61, 23))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btnAdd.setFont(font)
        self.btnAdd.setStyleSheet("background-color:#90EE90")
        self.btnAdd.setObjectName("btnAdd")
        self.btnModify = QtWidgets.QPushButton(Form)
        self.btnModify.setGeometry(QtCore.QRect(90, 200, 61, 23))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btnModify.setFont(font)
        self.btnModify.setStyleSheet("background-color:#90EE90")
        self.btnModify.setObjectName("btnModify")
        self.btnSave = QtWidgets.QPushButton(Form)
        self.btnSave.setGeometry(QtCore.QRect(170, 200, 61, 23))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btnSave.setFont(font)
        self.btnSave.setStyleSheet("background-color:#90EE90")
        self.btnSave.setObjectName("btnSave")
        self.btnDelete = QtWidgets.QPushButton(Form)
        self.btnDelete.setGeometry(QtCore.QRect(250, 200, 61, 23))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btnDelete.setFont(font)
        self.btnDelete.setStyleSheet("background-color:#90EE90")
        self.btnDelete.setObjectName("btnDelete")
        self.btnExit = QtWidgets.QPushButton(Form)
        self.btnExit.setGeometry(QtCore.QRect(330, 200, 61, 23))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.btnExit.setFont(font)
        self.btnExit.setStyleSheet("background-color:#90EE90")
        self.btnExit.setObjectName("btnExit")
        self.label_Heder = QtWidgets.QLabel(Form)
        self.label_Heder.setGeometry(QtCore.QRect(40, 20, 271, 31))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label_Heder.setFont(font)
        self.label_Heder.setStyleSheet("color:rgb(85, 0, 0);")
        self.label_Heder.setAlignment(QtCore.Qt.AlignCenter)
        self.label_Heder.setObjectName("label_Heder")
        self.label_List = QtWidgets.QLabel(Form)
        self.label_List.setGeometry(QtCore.QRect(410, 20, 181, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_List.setFont(font)
        self.label_List.setStyleSheet("QLabel { border: 1px solid Black;};")
        self.label_List.setAlignment(QtCore.Qt.AlignCenter)
        self.label_List.setObjectName("label_List")
        self.lineEdit_Search = QtWidgets.QLineEdit(Form)
        self.lineEdit_Search.setGeometry(QtCore.QRect(410, 40, 181, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lineEdit_Search.setFont(font)
        self.lineEdit_Search.setStyleSheet("background-color:rgb(210, 215, 255)")
        self.lineEdit_Search.setObjectName("lineEdit_Search")
        self.listWidget = QtWidgets.QListWidget(Form)
        self.listWidget.setGeometry(QtCore.QRect(410, 60, 181, 221))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.listWidget.setFont(font)
        self.listWidget.setStyleSheet("background-color:rgb(255, 255, 255)")
        self.listWidget.setObjectName("listWidget")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)
        self.View_data()
        self.Transporter()
        self.CB_TName.highlighted[str].connect(self.refreshcombo)
        self.CB_TName.currentIndexChanged.connect(self.selectTransporter)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Vehicle Info"))
        self.label.setText(_translate("Form", "Vehicle Code :"))
        self.lineEdit_Name.setPlaceholderText(_translate("Form", "Vehicle Name"))
        self.LE_TCode.setPlaceholderText(_translate("Form", "New"))
        self.label_2.setText(_translate("Form", "Transporter Code :"))
        self.LE_VCode.setPlaceholderText(_translate("Form", "New"))
        self.btnAdd.setText(_translate("Form", "Add"))
        self.btnModify.setText(_translate("Form", "Modify"))
        self.btnSave.setText(_translate("Form", "Save"))
        self.btnDelete.setText(_translate("Form", "Delete"))
        self.btnExit.setText(_translate("Form", "Exit"))
        self.label_Heder.setText(_translate("Form", "Vehicle Info"))
        self.label_List.setText(_translate("Form", "List"))
        self.lineEdit_Search.setPlaceholderText(_translate("Form", "Search"))

        self.listWidget.clicked.connect(self.selectionChanged)
        self.lineEdit_Search.textChanged.connect(self.filterlist)
        self.btnDelete.clicked.connect(self.Delete_data)
        self.btnAdd.clicked.connect(self.add_data)
        self.btnSave.clicked.connect(self.save_data)
        self.btnModify.clicked.connect(self.Update_data)
        self.btnExit.clicked.connect(QtWidgets.qApp.quit)

    def save_data(self):
        LE_VCode = self.LE_VCode.text()
        lineEdit_Name = self.lineEdit_Name.text()
        if LE_VCode == '' and lineEdit_Name == '':
            # Create the dialog without running it yet
            msgBox = QMessageBox()

            # Set the various texts
            msgBox.setWindowTitle("Information")
            msgBox.setText(
                "No entry '" + str(LE_VCode) + " " + str(
                    lineEdit_Name) + "'.Would you like to add it to the database")
            msgBox.setStandardButtons(QMessageBox.Yes | QMessageBox.No)
            msgBox.setDefaultButton(QMessageBox.No)

            # Run the dialog, and check results
            bttn = msgBox.exec_()
            if bttn == QMessageBox.Yes:
                return True
            else:
                return False
        else:
            conn = sqlite3.connect('D:\Internship\ERP_Info\ERP_Info.db')
            cur = conn.cursor()
            cur.execute('INSERT INTO VehicleDB (Code,Name) \
                                       VALUES (?,?)', (LE_VCode, lineEdit_Name))

            conn.commit()
            print("Records Inserted successfully")
            conn.close()
            self.View_data()
            self.LE_VCode.clear()
            self.lineEdit_Name.clear()
            self.lineEdit_Name.setFocus()

    def filterlist(self):
        self.listWidget.clear()

    def add_data(self):
        self.lineEdit_Name.setEnabled(True)
        self.lineEdit_Name.setFocus()
        lastcode = self.listWidget.count()
        code = lastcode + 1
        print(code)
        self.LE_VCode.setText(str(code))

    def View_data(self):

        conn = sqlite3.connect('D:\Internship\ERP_Info\ERP_Info.db')
        cur = conn.cursor()

        cur.execute('select Name from VehicleDB')
        hu = cur.fetchall()
        self.listWidget.clear()
        for i in range(len(hu)):
            item = QtWidgets.QListWidgetItem(hu[i][0])
            self.listWidget.addItem(item)

        conn.commit()
        print("Records Displayed successfully")
        conn.close()

    def Update_data(self):
        self.lineEdit_Name.setEnabled(True)
        LE_VCode = self.LE_VCode.text()
        lineEdit_Name = self.lineEdit_Name.text()
        conn = sqlite3.connect('D:\Internship\ERP_Info\ERP_Info.db')
        cur = conn.cursor()
        cur.execute("UPDATE VehicleDB SET Name = ? WHERE Code = ?", (lineEdit_Name, LE_VCode))

        conn.commit()
        print("Records Modify successfully")
        conn.close()
        self.View_data()

    def Delete_data(self):
        lineEdit_Name = self.lineEdit_Name.text()
        conn = sqlite3.connect('D:\Internship\ERP_Info\ERP_Info.db')
        cur = conn.cursor()
        cur.execute("DELETE FROM VehicleDB WHERE Name=?", (lineEdit_Name,))

        conn.commit()
        print("Records Deleted successfully")
        conn.close()
        self.View_data()
        self.LE_VCode.clear()
        self.lineEdit_Name.clear()

    def selectionChanged(self):
        self.lineEdit_Name.setEnabled(False)
        name = self.listWidget.currentItem()
        cname = (name.text())
        self.lineEdit_Name.setText(name.text())
        conn = sqlite3.connect('D:\Internship\ERP_Info\ERP_Info.db')
        cur = conn.cursor()
        cur.execute("SELECT Code FROM VehicleDB WHERE Name=?", (cname,))
        result = cur.fetchone()
        # print(result)
        # print(type(result))
        res = int(''.join(map(str, result)))
        self.LE_VCode.setText(str(res))
        conn.commit()
        # print("Code Displayed successfully")
        conn.close()

    def selectTransporter(self):
        name = self.CB_TName.currentText()
        index = self.CB_TName.currentIndex()

        conn = sqlite3.connect('D:\Internship\ERP_Info\ERP_Info.db')
        cur = conn.cursor()
        cur.execute("SELECT Code FROM TransporterDB WHERE TransporterName=?", (name,))
        result = cur.fetchone()
        res = int(''.join(map(str, result)))
        self.LE_TCode.setText(str(res))
        conn.commit()
        conn.close()

    def Transporter(self):
        conn = sqlite3.connect('D:\Internship\ERP_Info\ERP_Info.db')
        c = conn.cursor()
        c.execute("SELECT TransporterName FROM TransporterDB")
        List = c.fetchall()
        # print(List)
        self.CB_TName.clear()
        for i in range(len(List)):
            self.CB_TName.addItem(List[i][0])
            # print(row)
        conn.commit()
        conn.close()

    def refreshcombo(self):
        count = self.CB_TName.count()
        conn = sqlite3.connect('D:\Internship\ERP_Info\ERP_Info.db')
        cur = conn.cursor()
        cur.execute('SELECT * FROM TransporterDB')
        result = cur.fetchall()
        #print(len(result))
        conn.commit()
        conn.close()
        a = count
        b = len(result)
        #print(result)
        if a != b:
            self.Transporter()
            return



if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    widget = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(widget)
    widget.show()
    sys.exit(app.exec_())